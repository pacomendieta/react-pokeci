name: Deployment Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:

#  avoid_reduncy:
#    runs-on: ubuntu-18.04
#    steps:
#      - name: Cancel Previous Redundant Builds
#        uses: styfle/cancel-workflow-action@0.9.1
#        with:
#          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '14'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run eslint

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '14'
      - name: Install dependencies
        run: npm ci --no-audit --no-fund --no-optional
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  #test:
  #  needs: [lint, build]
  #  runs-on: ubuntu-20.04
  #  steps:
  #    - uses: actions/checkout@v3
  #        fetch-depth: 0
  #    - uses: actions/setup-node@v3.6.0
  #      with:
  #        cache: 'npm'
  #        node-version: '14'
  #    - name: Install dependencies
  #      run: npm ci --no-audit --no-fund --no-optional
  #    - uses: actions/download-artifact@v3
  #        name: dist
  #        path: dist
  #    - name: Test
  #      run: npm test

  e2e:
    needs: [lint, build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '14'
      - name: Install dependencies
        run: npm ci --no-audit --no-fund --no-optional
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: E2E tests
        uses: cypress-io/github-action@v5     #cypress action para ejecutar cypress en servidor ubuntu
        with:
          command: npm run test:e2e              #comando para lanzar test e2e cypress
          start: npm run start-test              #comando previo:  lanzar la app
          wait-on: http://localhost:5000         #esperar a: esté disponible la app

  deploy:
    needs: [ build]     
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3    # Paso 1. checkout
        with: 
          fetch-depth: 0                # solo despliega el último commit
      - uses: actions/setup-node@v3
        with:
          node-version: '14' 
      - name: Install dependencias
        run: npm install --no-audit --no-fund --no-optional
      - name: Eslint validacion
        run: npm run eslint
  
  #    - name: Deploy to Heroku       # Paso 2. Desploy. 
  #      if: ${{ github.event_name == 'push' }}
  #      uses: akhileshns/heroku-deploy@v3.12.12
  #      with:
  #        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #        heroku_app_name: ${{secrets.HEROKU_APP}}
  #        heroku_email: ${{secrets.HEROKU_API_EMAIL}}
  #        healthcheck: "https://${{secrets.HEROKU_APP}}.herokuapp.com/health"
  #        rollbackonhealthcheckfailed: true
